// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class UserConnectionsUpdated extends ethereum.Event {
  get params(): UserConnectionsUpdated__Params {
    return new UserConnectionsUpdated__Params(this);
  }
}

export class UserConnectionsUpdated__Params {
  _event: UserConnectionsUpdated;

  constructor(event: UserConnectionsUpdated) {
    this._event = event;
  }

  get _user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get connections(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get pendingConnections(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }
}

export class UserRegistered extends ethereum.Event {
  get params(): UserRegistered__Params {
    return new UserRegistered__Params(this);
  }
}

export class UserRegistered__Params {
  _event: UserRegistered;

  constructor(event: UserRegistered) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _profileDataHash(): string {
    return this._event.parameters[1].value.toString();
  }

  get _profileImageHash(): string {
    return this._event.parameters[2].value.toString();
  }

  get _profileHeaderHash(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class UserUpdated extends ethereum.Event {
  get params(): UserUpdated__Params {
    return new UserUpdated__Params(this);
  }
}

export class UserUpdated__Params {
  _event: UserUpdated;

  constructor(event: UserUpdated) {
    this._event = event;
  }

  get _user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _profileImageHash(): string {
    return this._event.parameters[1].value.toString();
  }

  get _profileHeaderHash(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class UserFactory__getUserProfileResultValue0Struct extends ethereum.Tuple {
  get walletAddress(): Address {
    return this[0].toAddress();
  }

  get profileImageHash(): string {
    return this[1].toString();
  }

  get profileHeaderHash(): string {
    return this[2].toString();
  }

  get profileDataHash(): string {
    return this[3].toString();
  }

  get connections(): Array<Address> {
    return this[4].toAddressArray();
  }

  get pendingConnections(): Array<Address> {
    return this[5].toAddressArray();
  }

  get exists(): boolean {
    return this[6].toBoolean();
  }
}

export class UserFactory__usersResult {
  value0: Address;
  value1: string;
  value2: string;
  value3: string;
  value4: boolean;

  constructor(
    value0: Address,
    value1: string,
    value2: string,
    value3: string,
    value4: boolean,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getWalletAddress(): Address {
    return this.value0;
  }

  getProfileImageHash(): string {
    return this.value1;
  }

  getProfileHeaderHash(): string {
    return this.value2;
  }

  getProfileDataHash(): string {
    return this.value3;
  }

  getExists(): boolean {
    return this.value4;
  }
}

export class UserFactory extends ethereum.SmartContract {
  static bind(address: Address): UserFactory {
    return new UserFactory("UserFactory", address);
  }

  doesUserExist(_userWallet: Address): boolean {
    let result = super.call("doesUserExist", "doesUserExist(address):(bool)", [
      ethereum.Value.fromAddress(_userWallet),
    ]);

    return result[0].toBoolean();
  }

  try_doesUserExist(_userWallet: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "doesUserExist",
      "doesUserExist(address):(bool)",
      [ethereum.Value.fromAddress(_userWallet)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getNumberOfConnections(_userWallet: Address): BigInt {
    let result = super.call(
      "getNumberOfConnections",
      "getNumberOfConnections(address):(uint256)",
      [ethereum.Value.fromAddress(_userWallet)],
    );

    return result[0].toBigInt();
  }

  try_getNumberOfConnections(
    _userWallet: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNumberOfConnections",
      "getNumberOfConnections(address):(uint256)",
      [ethereum.Value.fromAddress(_userWallet)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserProfile(
    _userWallet: Address,
  ): UserFactory__getUserProfileResultValue0Struct {
    let result = super.call(
      "getUserProfile",
      "getUserProfile(address):((address,string,string,string,address[],address[],bool))",
      [ethereum.Value.fromAddress(_userWallet)],
    );

    return changetype<UserFactory__getUserProfileResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getUserProfile(
    _userWallet: Address,
  ): ethereum.CallResult<UserFactory__getUserProfileResultValue0Struct> {
    let result = super.tryCall(
      "getUserProfile",
      "getUserProfile(address):((address,string,string,string,address[],address[],bool))",
      [ethereum.Value.fromAddress(_userWallet)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<UserFactory__getUserProfileResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  users(param0: Address): UserFactory__usersResult {
    let result = super.call(
      "users",
      "users(address):(address,string,string,string,bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new UserFactory__usersResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBoolean(),
    );
  }

  try_users(param0: Address): ethereum.CallResult<UserFactory__usersResult> {
    let result = super.tryCall(
      "users",
      "users(address):(address,string,string,string,bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new UserFactory__usersResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toBoolean(),
      ),
    );
  }
}

export class AcceptConnectionCall extends ethereum.Call {
  get inputs(): AcceptConnectionCall__Inputs {
    return new AcceptConnectionCall__Inputs(this);
  }

  get outputs(): AcceptConnectionCall__Outputs {
    return new AcceptConnectionCall__Outputs(this);
  }
}

export class AcceptConnectionCall__Inputs {
  _call: AcceptConnectionCall;

  constructor(call: AcceptConnectionCall) {
    this._call = call;
  }

  get _userWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _connectionAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AcceptConnectionCall__Outputs {
  _call: AcceptConnectionCall;

  constructor(call: AcceptConnectionCall) {
    this._call = call;
  }
}

export class AddConnectionRequestCall extends ethereum.Call {
  get inputs(): AddConnectionRequestCall__Inputs {
    return new AddConnectionRequestCall__Inputs(this);
  }

  get outputs(): AddConnectionRequestCall__Outputs {
    return new AddConnectionRequestCall__Outputs(this);
  }
}

export class AddConnectionRequestCall__Inputs {
  _call: AddConnectionRequestCall;

  constructor(call: AddConnectionRequestCall) {
    this._call = call;
  }

  get _userWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _connectionAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddConnectionRequestCall__Outputs {
  _call: AddConnectionRequestCall;

  constructor(call: AddConnectionRequestCall) {
    this._call = call;
  }
}

export class RegisterUserCall extends ethereum.Call {
  get inputs(): RegisterUserCall__Inputs {
    return new RegisterUserCall__Inputs(this);
  }

  get outputs(): RegisterUserCall__Outputs {
    return new RegisterUserCall__Outputs(this);
  }
}

export class RegisterUserCall__Inputs {
  _call: RegisterUserCall;

  constructor(call: RegisterUserCall) {
    this._call = call;
  }

  get _profileDataHash(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _profileImageHash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _profileHeaderHash(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RegisterUserCall__Outputs {
  _call: RegisterUserCall;

  constructor(call: RegisterUserCall) {
    this._call = call;
  }
}

export class RemoveConnectionFromConnectionsCall extends ethereum.Call {
  get inputs(): RemoveConnectionFromConnectionsCall__Inputs {
    return new RemoveConnectionFromConnectionsCall__Inputs(this);
  }

  get outputs(): RemoveConnectionFromConnectionsCall__Outputs {
    return new RemoveConnectionFromConnectionsCall__Outputs(this);
  }
}

export class RemoveConnectionFromConnectionsCall__Inputs {
  _call: RemoveConnectionFromConnectionsCall;

  constructor(call: RemoveConnectionFromConnectionsCall) {
    this._call = call;
  }

  get _userWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _connectionAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveConnectionFromConnectionsCall__Outputs {
  _call: RemoveConnectionFromConnectionsCall;

  constructor(call: RemoveConnectionFromConnectionsCall) {
    this._call = call;
  }
}

export class RemoveConnectionFromPendingConnectionsCall extends ethereum.Call {
  get inputs(): RemoveConnectionFromPendingConnectionsCall__Inputs {
    return new RemoveConnectionFromPendingConnectionsCall__Inputs(this);
  }

  get outputs(): RemoveConnectionFromPendingConnectionsCall__Outputs {
    return new RemoveConnectionFromPendingConnectionsCall__Outputs(this);
  }
}

export class RemoveConnectionFromPendingConnectionsCall__Inputs {
  _call: RemoveConnectionFromPendingConnectionsCall;

  constructor(call: RemoveConnectionFromPendingConnectionsCall) {
    this._call = call;
  }

  get _userWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _connectionAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveConnectionFromPendingConnectionsCall__Outputs {
  _call: RemoveConnectionFromPendingConnectionsCall;

  constructor(call: RemoveConnectionFromPendingConnectionsCall) {
    this._call = call;
  }
}

export class SetProfileDataHashCall extends ethereum.Call {
  get inputs(): SetProfileDataHashCall__Inputs {
    return new SetProfileDataHashCall__Inputs(this);
  }

  get outputs(): SetProfileDataHashCall__Outputs {
    return new SetProfileDataHashCall__Outputs(this);
  }
}

export class SetProfileDataHashCall__Inputs {
  _call: SetProfileDataHashCall;

  constructor(call: SetProfileDataHashCall) {
    this._call = call;
  }

  get _userWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _hash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetProfileDataHashCall__Outputs {
  _call: SetProfileDataHashCall;

  constructor(call: SetProfileDataHashCall) {
    this._call = call;
  }
}

export class SetProfileHeaderAndImageHashCall extends ethereum.Call {
  get inputs(): SetProfileHeaderAndImageHashCall__Inputs {
    return new SetProfileHeaderAndImageHashCall__Inputs(this);
  }

  get outputs(): SetProfileHeaderAndImageHashCall__Outputs {
    return new SetProfileHeaderAndImageHashCall__Outputs(this);
  }
}

export class SetProfileHeaderAndImageHashCall__Inputs {
  _call: SetProfileHeaderAndImageHashCall;

  constructor(call: SetProfileHeaderAndImageHashCall) {
    this._call = call;
  }

  get _userWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _profileImageHash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _profileHeaderHash(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SetProfileHeaderAndImageHashCall__Outputs {
  _call: SetProfileHeaderAndImageHashCall;

  constructor(call: SetProfileHeaderAndImageHashCall) {
    this._call = call;
  }
}

export class SetProfileHeaderHashCall extends ethereum.Call {
  get inputs(): SetProfileHeaderHashCall__Inputs {
    return new SetProfileHeaderHashCall__Inputs(this);
  }

  get outputs(): SetProfileHeaderHashCall__Outputs {
    return new SetProfileHeaderHashCall__Outputs(this);
  }
}

export class SetProfileHeaderHashCall__Inputs {
  _call: SetProfileHeaderHashCall;

  constructor(call: SetProfileHeaderHashCall) {
    this._call = call;
  }

  get _userWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _hash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetProfileHeaderHashCall__Outputs {
  _call: SetProfileHeaderHashCall;

  constructor(call: SetProfileHeaderHashCall) {
    this._call = call;
  }
}

export class SetProfileImageHashCall extends ethereum.Call {
  get inputs(): SetProfileImageHashCall__Inputs {
    return new SetProfileImageHashCall__Inputs(this);
  }

  get outputs(): SetProfileImageHashCall__Outputs {
    return new SetProfileImageHashCall__Outputs(this);
  }
}

export class SetProfileImageHashCall__Inputs {
  _call: SetProfileImageHashCall;

  constructor(call: SetProfileImageHashCall) {
    this._call = call;
  }

  get _userWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _hash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetProfileImageHashCall__Outputs {
  _call: SetProfileImageHashCall;

  constructor(call: SetProfileImageHashCall) {
    this._call = call;
  }
}
